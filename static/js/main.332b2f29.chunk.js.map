{"version":3,"sources":["Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","useEffect","grey","daysContainer","$","forEach","day","console","log","rowdiv","addClass","append","containerdiv","daydiv","html","div","click","clickEvent","backgroundColor","target","css","runJquery","className","id","App","Switch","color","defaultChecked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA2EeA,MAvEf,WA8DI,OALAC,qBAAU,YAtDQ,WAEd,IACIC,EAAO,qBAGPC,EAAgBC,IAAE,SAJX,CAAC,OAAQ,MAAO,aAAc,aAAc,MAAO,MAAO,aAMhEC,SAAQ,SAACC,GAEVC,QAAQC,IAAI,aAAcF,EAAKH,GAE/B,IAAIM,EAASL,IAAE,eACfK,EAAOC,SAAS,OAEhBP,EAAcQ,OAAOF,GAErB,IAAIG,EAAeR,IAAE,eACrBQ,EAAaF,SAAS,kBAEtBD,EAAOE,OAAOC,GAEd,IAAIC,EAAST,IAAE,eACfS,EAAOH,SAAS,aAAaA,SAAS,OAAOI,KAAKR,GAElDM,EAAaD,OAAOE,GAGpB,IAAIE,EAAMX,IAAE,eACZW,EAAIL,SAAS,aACbK,EAAID,KAAK,OACTC,EAAIC,OAAM,SAAUC,GAEhB,IAAIC,EAAkBd,IAAEa,EAAWE,QAAQC,IAAI,oBAE/Cb,QAAQC,IAAIU,GAGRA,IAAoBhB,GACpBE,IAAEa,EAAWE,QAAQC,IAAI,mBAnCzB,sBAoCAhB,IAAEa,EAAWE,QAAQL,KAAK,QAE1BV,IAAEa,EAAWE,QAAQC,IAAI,mBAAoBlB,GAC7CE,IAAEa,EAAWE,QAAQL,KAAK,WAKlCF,EAAaD,OAAOI,MAQxBM,MAIA,sBAAKC,UAAU,aAAf,0BAEI,qBAAKC,GAAG,aC3CLC,MApBf,WACE,OACE,sBAAKF,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,cAAf,0BAEE,sBAAKA,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,kBAA5B,IAA6D,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAAnG,OACA,sBAAKL,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,iBAA5B,IAA4D,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAAlG,OACA,sBAAKL,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,wBAA5B,KAAoE,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAA1G,OACA,sBAAKL,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,wBAA5B,KAAoE,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAA1G,OACA,sBAAKL,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,iBAA5B,KAA6D,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAAnG,OACA,sBAAKL,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,iBAA5B,IAA4D,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAAlG,OACA,sBAAKL,UAAU,YAAf,cAA4B,qBAAKA,UAAU,OAAf,uBAA5B,IAAkE,cAACG,EAAA,EAAD,CAAQC,MAAM,UAAUC,gBAAc,IAAxG,YAGJ,cAAC,EAAD,QCTSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.332b2f29.chunk.js","sourcesContent":["import $ from 'jquery';\nimport { useEffect } from 'react';\nimport './App.css';\n\nfunction Buttons() {\n\n\n    const runJquery = () => {\n\n        let days = [\"CHEQ\", \"CHM\", \"Harvesting\", \"Topography\", \"DFM\", \"LCM\", \"INTViewer\"]\n        let grey = \"rgb(191, 191, 191)\"\n        let green = \"rgb(105, 209, 132)\"\n\n        var daysContainer = $(\"#days\")\n\n        days.forEach((day) => {\n\n            console.log('processing', day, daysContainer)\n\n            let rowdiv = $('<div></div>')\n            rowdiv.addClass(\"row\")\n\n            daysContainer.append(rowdiv)\n\n            let containerdiv = $('<div></div>')\n            containerdiv.addClass(\"grid-container\")\n\n            rowdiv.append(containerdiv)\n\n            let daydiv = $('<div></div>');\n            daydiv.addClass(\"grid-item\").addClass(\"day\").html(day)\n\n            containerdiv.append(daydiv)\n\n            //for (var counter = 0; counter < 2; counter++) {\n            let div = $('<div></div>')\n            div.addClass(\"grid-item\")\n            div.html(\"Off\")\n            div.click(function (clickEvent) {\n\n                let backgroundColor = $(clickEvent.target).css(\"background-color\")\n\n                console.log(backgroundColor)\n\n\n                if (backgroundColor === grey) {\n                    $(clickEvent.target).css(\"background-color\", green);\n                    $(clickEvent.target).html(\"On\");\n                } else {\n                    $(clickEvent.target).css(\"background-color\", grey);\n                    $(clickEvent.target).html(\"Off\");\n\n                }\n            }\n            );\n            containerdiv.append(div)\n            //}\n\n        })\n    }\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        runJquery()\n    })\n\n    return (\n        <div className=\"App-header\">\n            Prototype Two\n            <div id=\"days\">\n            </div>\n        </div>\n    );\n}\n\nexport default Buttons;","/**import logo from './logo.svg';*/\nimport './App.css';\n/** */\nimport { Switch } from '@mui/material';\nimport Buttons from './Buttons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"SwitchBoard\">\n          Prototype One\n          <div className=\"SwitchRow\"> <div className=\"col6\">CHEQ</div> <Switch color=\"success\" defaultChecked /> </div>\n          <div className=\"SwitchRow\"> <div className=\"col6\">CHM</div> <Switch color=\"success\" defaultChecked /> </div>\n          <div className=\"SwitchRow\"> <div className=\"col6\">Harvesting</div>  <Switch color=\"success\" defaultChecked /> </div>\n          <div className=\"SwitchRow\"> <div className=\"col6\">Topography</div>  <Switch color=\"success\" defaultChecked /> </div>\n          <div className=\"SwitchRow\"> <div className=\"col6\">DFM</div>  <Switch color=\"success\" defaultChecked /> </div>\n          <div className=\"SwitchRow\"> <div className=\"col6\">LCM</div> <Switch color=\"success\" defaultChecked /> </div>\n          <div className=\"SwitchRow\"> <div className=\"col6\">INTViewer</div> <Switch color=\"success\" defaultChecked /> </div>\n        </div>\n      </header>\n      <Buttons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}